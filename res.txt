=== MODERN OCTAL (0o/0O) PREFIX TEST SUITE ===

"-" : Invalid ✓
"+" : Invalid ✓
"0x" : Invalid ✓
"0X" : Invalid ✓
"0o" : Invalid ✓
"0O" : Invalid ✓
"0" : Invalid ✗ FAIL
  Expected: Valid
"00" : Invalid ✗ FAIL
  Expected: Valid
--- MODERN OCTAL PREFIX SUPPORT ---
"0o0" (basic 0o prefix) : Invalid ✗ FAIL
  Expected: Valid
"0O0" (basic 0O prefix) : Invalid ✗ FAIL
  Expected: Valid
"0o1" (0o with digit 1) : Invalid ✗ FAIL
  Expected: Valid
"0o7" (0o with digit 7) : Invalid ✗ FAIL
  Expected: Valid
"0o01234567" (0o with all valid digits) : Invalid ✗ FAIL
  Expected: Valid
"0O01234567" (0O with all valid digits) : Invalid ✗ FAIL
  Expected: Valid
"0o777" (0o common octal value) : Invalid ✗ FAIL
  Expected: Valid
"0O777" (0O common octal value) : Invalid ✗ FAIL
  Expected: Valid

--- BASIC OCTAL SUMMARY ---
Tests: 6/16 passed (37.5%)

--- INVALID OCTAL DIGITS ---
"0o8" (0o with invalid digit 8) : Invalid ✓
"0o9" (0o with invalid digit 9) : Invalid ✓
"0O8" (0O with invalid digit 8) : Invalid ✓
"0O9" (0O with invalid digit 9) : Invalid ✓
"0o0128" (0o with mixed valid/invalid) : Invalid ✓
"0o7890" (0o ending with invalid) : Invalid ✓
"0o89ab" (0o with multiple invalid) : Invalid ✓

--- INVALID DIGITS SUMMARY ---
Tests: 13/23 passed (56.5217%)

--- SIGNED MODERN OCTALS ---
"+0o777" (positive 0o - EXPECTED BUG) : Invalid ✗ FAIL
  Expected: Valid
"-0o777" (negative 0o - EXPECTED BUG) : Invalid ✗ FAIL
  Expected: Valid
"+0O777" (positive 0O - EXPECTED BUG) : Invalid ✗ FAIL
  Expected: Valid
"-0O777" (negative 0O - EXPECTED BUG) : Invalid ✗ FAIL
  Expected: Valid
"+0o0" (positive 0o zero) : Invalid ✗ FAIL
  Expected: Valid
"-0o0" (negative 0o zero) : Invalid ✗ FAIL
  Expected: Valid

--- SIGNED OCTALS SUMMARY ---
Tests: 13/29 passed (44.8276%)

--- EMPTY AND MALFORMED OCTALS ---
"0o" (empty 0o prefix) : Invalid ✓
"0O" (empty 0O prefix) : Invalid ✓
"0oo" (double o) : Valid ✗ FAIL
  Expected: Invalid
"0OO" (double O) : Valid ✗ FAIL
  Expected: Invalid
"0ox" (0o mixed with x) : Valid ✗ FAIL
  Expected: Invalid
"0Ox" (0O mixed with x) : Valid ✗ FAIL
  Expected: Invalid
"o777" (missing leading 0) : Invalid ✓
"O777" (missing leading 0) : Invalid ✓
"00o777" (extra leading 0) : Invalid ✓

--- MALFORMED SUMMARY ---
Tests: 18/38 passed (47.3684%)

--- TRADITIONAL LEADING ZEROS (NOW DECIMAL) ---
"0" (single zero) : Invalid ✗ FAIL
  Expected: Valid
"00" (double zero) : Invalid ✗ FAIL
  Expected: Valid
"000" (triple zero) : Invalid ✗ FAIL
  Expected: Valid
"01" (01 - now decimal) : Invalid ✗ FAIL
  Expected: Valid
"07" (07 - now decimal) : Invalid ✗ FAIL
  Expected: Valid
"010" (010 - now decimal) : Invalid ✗ FAIL
  Expected: Valid
"0123" (0123 - now decimal) : Invalid ✗ FAIL
  Expected: Valid
"01234567" (01234567 - now decimal) : Invalid ✗ FAIL
  Expected: Valid
"08" (08 - valid decimal now) : Invalid ✗ FAIL
  Expected: Valid
"09" (09 - valid decimal now) : Invalid ✗ FAIL
  Expected: Valid
"0123456789" (0123456789 - valid decimal) : Invalid ✗ FAIL
  Expected: Valid
"0999" (0999 - valid decimal) : Invalid ✗ FAIL
  Expected: Valid

--- LEADING ZEROS AS DECIMAL SUMMARY ---
Tests: 18/50 passed (36%)

--- HEX VS OCTAL DISTINCTION ---
"0x10" (hex) : Valid ✓
"0o10" (octal) : Invalid ✗ FAIL
  Expected: Valid
"0X10" (hex uppercase) : Valid ✓
"0O10" (octal uppercase) : Invalid ✗ FAIL
  Expected: Valid
"0x0o10" (mixed prefixes) : Invalid ✓
"0o0x10" (mixed prefixes reverse) : Invalid ✓
"0xo10" (malformed hex) : Invalid ✓
"0ox10" (malformed octal) : Invalid ✓

--- HEX VS OCTAL SUMMARY ---
Tests: 24/58 passed (41.3793%)

--- CASE SENSITIVITY ---
"0o777" (lowercase o) : Invalid ✗ FAIL
  Expected: Valid
"0O777" (uppercase O) : Invalid ✗ FAIL
  Expected: Valid
"0Ö777" (invalid character Ö) : Invalid ✓
"0ο777" (Greek omicron) : Invalid ✓
"0О777" (Cyrillic O) : Invalid ✓

--- CASE SENSITIVITY SUMMARY ---
Tests: 27/63 passed (42.8571%)

--- WHITESPACE AND SPECIAL CHARS ---
"0o 777" (space after prefix) : Invalid ✓
" 0o777" (leading space) : Invalid ✓
"0o777 " (trailing space) : Invalid ✓
"0o7 77" (space in number) : Invalid ✓
"0o	777" (tab in number) : Invalid ✓
"0o777
" (newline after) : Invalid ✓
"0o777." (decimal point) : Invalid ✓
"0o777f" (letter suffix) : Invalid ✓

--- WHITESPACE SUMMARY ---
Tests: 35/71 passed (49.2958%)

--- BOUNDARY CASES ---
"0o0000000" (many leading zeros) : Invalid ✗ FAIL
  Expected: Valid
"0o7777777" (many sevens) : Invalid ✗ FAIL
  Expected: Valid
"0overy long octal) : Invalid ✗ FAIL
  Expected: Valid
very long zeros) : Invalid ✗ FAIL
  Expected: Valid
"0o1234567012345670123" (repeating pattern) : Invalid ✗ FAIL
  Expected: Valid

--- BOUNDARY CASES SUMMARY ---
Tests: 35/76 passed (46.0526%)

--- MIXED NUMBER SYSTEMS ---
"123" (pure decimal) : Invalid ✗ FAIL
  Expected: Valid
"0123" (decimal with leading zero) : Invalid ✗ FAIL
  Expected: Valid
"0o123" (explicit octal) : Invalid ✗ FAIL
  Expected: Valid
"0x123" (hex) : Valid ✓
"+123" (signed decimal) : Invalid ✗ FAIL
  Expected: Valid
"+0o123" (signed octal - EXPECTED BUG) : Invalid ✗ FAIL
  Expected: Valid
"+0x123" (signed hex - EXPECTED BUG) : Valid ✓
"-123" (negative decimal) : Invalid ✗ FAIL
  Expected: Valid
"-0o123" (negative octal - EXPECTED BUG) : Invalid ✗ FAIL
  Expected: Valid
"-0x123" (negative hex - EXPECTED BUG) : Valid ✓

--- MIXED SYSTEMS SUMMARY ---
Tests: 38/86 passed (44.186%)

=== COMPREHENSIVE STATISTICS ===
Total tests run: 86
Tests passed: 38 (44.186%)
Tests failed: 48 (55.814%)

=== FAILED TEST CASES ===
1. "0"
2. "00"
3. "0o0"
4. "0O0"
5. "0o1"
6. "0o7"
7. "0o01234567"
8. "0O01234567"
9. "0o777"
10. "0O777"
11. "+0o777"
12. "-0o777"
13. "+0O777"
14. "-0O777"
15. "+0o0"
16. "-0o0"
17. "0oo"
18. "0OO"
19. "0ox"
20. "0Ox"
21. "0"
22. "00"
23. "000"
24. "01"
25. "07"
26. "010"
27. "0123"
28. "01234567"
29. "08"
30. "09"
31. "0123456789"
32. "0999"
33. "0o10"
34. "0O10"
35. "0o777"
36. "0O777"
37. "0o0000000"
38. "0o7777777"
39. "0o7777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777"

41. "0o1234567012345670123"
42. "123"
43. "0123"
44. "0o123"
45. "+123"
46. "+0o123"
47. "-123"
48. "-0o123"

=== BUGS DETECTED IN YOUR IMPLEMENTATION ===
🐛 BUG #1: Signed prefix numbers fail
   Problem: starts_with() checks original string, not after sign
   Examples: +0o777, -0x10 incorrectly fail
   Fix: Check prefixes on str.substr(start)

🐛 BUG #2: Octal increment logic error
   Problem: 'start++;' should be 'start += 2;' for 0o/0O
   Effect: 0o777 validates 'o777' instead of '777'
   Fix: Change to start += 2 for octal prefix

✅ GOOD: Leading zero numbers are now treated as decimal
✅ GOOD: Modern 0o/0O prefix approach implemented

=== EXPECTED BEHAVIOR SUMMARY ===
Decimal: 123, +456, -789, 0123 (leading zeros ignored)
Hex:     0x10, 0XAB, +0xFF, -0xDEAD
Octal:   0o777, 0O123, +0o456, -0O321
Invalid: 0o8, 0o9, 0x, 0o, spaces, letters in decimal/octal
